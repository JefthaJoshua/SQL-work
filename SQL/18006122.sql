DROP TABLE CUSTOMER_TBL;
DROP TABLE EMPLOYEE_TBL;
DROP TABLE DELIVERY_TBL;
DROP TABLE RETURNS_TBL;
DROP TABLE PRODUCT_TBL;
DROP TABLE BILLING_TBL;
DROP TABLE PRODUCT_BILLING_TBL;

--1. The server output is one word: set serveroutput on
--2. declaring is the wrong word and should be: Declare
--3. cust name varchar has 2 variables (cust/name) should be one variable called cust_name 
--4. cust_name varchar2 is missing its lengs, solution Varchar2(255) 
--5. b date varchar has 2 variables (be/date) should be one variable called b_date
--6. dbms_output.put_line('VEHICLE: ' || vehicle) is missing a semi colon

SET SERVEROUTPUT ON 
DECLARE
CUST_NAME varchar2(255); 
B_DAT DATE; 
DESCRIPTION varchar2(100); 
VEH varchar2(50); 

START 
SELECT Q.FIRST_NAME || ', ' || Q.SURNAME, M.bill_date, E.DESCRIPTION, R.vehicle_type 
INTO CUST_NAME, B_DAT, DESCRIPTION, VEH 
FROM customer Q, billing M, delivery_items E, driver_deliveries Y, VEHICL R, staff U 
WHERE Q.CUSTOMER_ID = M.CUSTOMER_ID 
AND U.STAFF_ID = bill.STAFF_ID 
AND U.STAFF_ID = E.STAFF_ID 
AND E.DELIVERY_ITEM_ID = Y.DELIVERY_ITEM_ID 
AND R.VIN_NUMBER = Y.VIN_NUMBER 
AND M.bill_date = '10 November 2016' 
dbms_output.put_line('CUSTOMER: ' || CUST_NAME); 
dbms_output.put_line('BILL DATE: ' || B_DAT); 
dbms_output.put_line('DESCRIPTION: ' || DESCRIPTION); 
dbms_output.put_line('VEHICLE: ' || VEHICL); 
END;


CREATE TABLE CUSTOMER_TBL
(
CUSTOMER_ID INT,
FIRST_NAME VARCHAR(50) NOT NULL,
SURNAME VARCHAR(50) NOT NULL,
ADDRESS VARCHAR(50) NOT NULL,
CONTACT_NUMBER VARCHAR(50) NOT NULL,
EMAIL VARCHAR(50) NOT NULL,
CONSTRAINT PK_CUS PRIMARY KEY(CUSTOMER_ID)
);

CREATE TABLE EMPLOYEE_TBL
(
EMPLOYEE_ID VARCHAR(6),
FIRST_NAME VARCHAR(50) NOT NULL,
SURNAME VARCHAR(50) NOT NULL,
CONTACT_NUMBER VARCHAR(50) NOT NULL,
"POSITION" VARCHAR(50) NOT NULL,
ADDRESS VARCHAR(50) NOT NULL,
EMAIL VARCHAR(50) NOT NULL,
CONSTRAINT PK_EMP PRIMARY KEY(EMPLOYEE_ID)
);

CREATE TABLE DELIVERY_TBL
(
DELIVERY_ID INT,
"DESCRIPTION" VARCHAR(50) NOT NULL,
DISPATCH_DATE DATE NOT NULL,
DELIVERY_DATE DATE NOT NULL,
CONSTRAINT PK_DEL PRIMARY KEY(DELIVERY_ID)
);

CREATE TABLE RETURNS_TBL
(
RETURN_ID VARCHAR(6),
RETURN_DATE DATE NOT NULL,
REASON VARCHAR(255) NOT NULL,
CONSTRAINT PK_RET PRIMARY KEY(RETURN_ID)
);

CREATE TABLE PRODUCT_TBL
(
PRODUCT_ID INT,
PRODUCT VARCHAR(50) NOT NULL,
PRICE NUMBER(9,2) NOT NULL,
QTY INT NOT NULL,
CONSTRAINT PK_PROD PRIMARY KEY(PRODUCT_ID)
);

CREATE TABLE BILLING_TBL
(
BILL_ID INT,
CUSTOMER_ID INT,
BILL_DATE DATE NOT NULL,
EMPLOYEE_ID VARCHAR(15),
CONSTRAINT PK_BL PRIMARY KEY(BILL_ID),
CONSTRAINT FK_BL_EMPID FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE_TBL(EMPLOYEE_ID),
CONSTRAINT FK_BL_DATE FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER_TBL(CUSTOMER_ID)
);

CREATE TABLE PRODUCT_BILLING_TBL
(
DELIVERY_ID INT,
RETURN_ID VARCHAR(50),
PRODUCT_ID INT,
BILL_ID INT,
CONSTRAINT PK_PRO_BILLING PRIMARY KEY(DELIVERY_ID, PRODUCT_ID, BILL_ID),
CONSTRAINT FK_P_DEL_ID FOREIGN KEY (DELIVERY_ID) REFERENCES DELIVERY_TBL(DELIVERY_ID),
CONSTRAINT FK_P_RET_ID FOREIGN KEY (RETURN_ID) REFERENCES RETURNS_TBL(RETURN_ID),
CONSTRAINT FK_P_BI_ID FOREIGN KEY (BILL_ID) REFERENCES BILLING_TBL(BILL_ID),
CONSTRAINT FK_P_PRO_ID FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT_TBL(PRODUCT_ID)
);

INSERT ALL
INTO CUSTOMER_TBL VALUES (11011, 'Jeffery', 'Smith', '18 Water Rd', '0877277521', 'jef@isat.com')
INTO CUSTOMER_TBL VALUES (11012, 'Alex', 'Hendricks', '22 Water Rd', '0863257857', 'ah@mcom.co.za')
INTO CUSTOMER_TBL VALUES (11013, 'Johnson', 'Clark', '101 Summer Lane', '0834567891', 'jclark@mcom.co.za')
INTO CUSTOMER_TBL VALUES (11014, 'Henry', 'Jones', '55 Mountain Way', '0612547895', 'hj@isat.co.za')
INTO CUSTOMER_TBL VALUES (11015, 'Andre', 'Williams', '5 Main Rd', '0827238521', 'aw@mcal.co.za')
SELECT 1 FROM DUAL;


INSERT ALL
INTO EMPLOYEE_TBL VALUES ('emp101', 'Roan', 'Davis', '0877277521', 'Sales', '10 Main Rd', 'rd@isat.com')
INTO EMPLOYEE_TBL VALUES ('emp102', 'Billy', 'Marks', '0837377522', 'Marketing', '18 Water Rd', 'bmark@isat.com')
INTO EMPLOYEE_TBL VALUES ('emp103', 'Chadwin', 'Andrews', '0817117523', 'Sales', '21 Circle Lane', 'ca@isat.com')
INTO EMPLOYEE_TBL VALUES ('emp104', 'Wayne', 'Dryer', '0797215244', 'Sales', '1 Sea Rd', 'dryer@isat.com')
INTO EMPLOYEE_TBL VALUES ('emp105', 'Jaci', 'Samson', '0827122255', 'Manager', '12 Main Rd', 'samjax@isat.com')
SELECT 1 FROM DUAL;

INSERT ALL
INTO DELIVERY_TBL VALUES (511, 'Delivery contains glass items – fragile', '10 May 2017', '15 May 2017')
INTO DELIVERY_TBL VALUES (512 , 'Delivery of wooden items', '12 May 2017', '15 May 2017 ')
INTO DELIVERY_TBL VALUES (513 , 'No description available', '12 May 2017', '17 May 2017 ')
INTO DELIVERY_TBL VALUES (514 , 'Delivery contains glass items – fragile', '12 May 2017', '15 May 2017')
INTO DELIVERY_TBL VALUES (515 , 'Delivery contains glass items – fragile', '18 May 2017 ', '19 May 2017 ')
INTO DELIVERY_TBL VALUES (516 , 'No description available', '20 May 2017', '25 May 2017')
INTO DELIVERY_TBL VALUES (517 , 'Delivery of wooden items', '25 May 2017', '27 May 2017')
SELECT 1 FROM DUAL;

INSERT ALL
INTO RETURNS_TBL VALUES ('ret001' , '25 May 2017', 'Customer not satisfied with product')
INTO RETURNS_TBL VALUES ('ret002' , '25 May 2017', 'Product missing part ')
SELECT 1 FROM DUAL;

INSERT ALL
INTO PRODUCT_TBL VALUES (7111, 'Four Piece Wall Unit', 10999, 10)
INTO PRODUCT_TBL VALUES (7112, 'Plasma Stand Unit', 7999, 8)
INTO PRODUCT_TBL VALUES (7113, 'Leather Recliner', 5999, 8)
INTO PRODUCT_TBL VALUES (7114, 'Leather Lazy Boy', 7999, 5)
INTO PRODUCT_TBL VALUES (7115, '6 Piece Fabric Suite', 17999, 15)
INTO PRODUCT_TBL VALUES (7116, '6 Piece Leather Suite', 27999, 12)
INTO PRODUCT_TBL VALUES (7117, '6-Seater Oak Dining table', 11999, 3)
SELECT 1 FROM DUAL;

INSERT ALL
INTO BILLING_TBL VALUES (8111, 11011, '15 May 2017', 'emp103')
INTO BILLING_TBL VALUES (8112, 11013, '15 May 2017', 'emp101')
INTO BILLING_TBL VALUES (8113, 11012, '17 May 2017', 'emp101')
INTO BILLING_TBL VALUES (8114, 11015, '17 May 2017', 'emp102')
INTO BILLING_TBL VALUES (8115, 11011, '17 May 2017', 'emp102')
INTO BILLING_TBL VALUES (8116, 11015, '18 May 2017', 'emp103')
INTO BILLING_TBL VALUES (8117, 11012, '19 May 2017', 'emp101')
INTO BILLING_TBL VALUES (8118, 11013, '19 May 2017', 'emp105')
SELECT 1 FROM DUAL;

INSERT ALL
INTO PRODUCT_BILLING_TBL VALUES (512, null, 7113, 8115)
INTO PRODUCT_BILLING_TBL VALUES (511, null, 7111, 8111)
INTO PRODUCT_BILLING_TBL VALUES (512, null, 7111, 8114)
INTO PRODUCT_BILLING_TBL VALUES (514, 'ret001', 7113, 8113)
INTO PRODUCT_BILLING_TBL VALUES (516, nulL, 7115, 8112)
INTO PRODUCT_BILLING_TBL VALUES (515, 'ret002', 7114, 8113)
INTO PRODUCT_BILLING_TBL VALUES (517, null, 7113, 8115)
INTO PRODUCT_BILLING_TBL VALUES (511, null, 7112, 8118)
INTO PRODUCT_BILLING_TBL VALUES (513, null, 7111, 8117)
INTO PRODUCT_BILLING_TBL VALUES (512, nulL, 7115, 8116)
SELECT 1 FROM DUAL;

--QUESTION 4
SELECT Z.FIRST_NAME||','|| Z.SURNAME "CUSTOMER",A.EMPLOYEE_ID, E.DESCRIPTION, F.PRODUCT,BILL_DATE
FROM CUSTOMER_TBL Z,BILLING_TBL T, EMPLOYEE_TBL A,PRODUCT_BILLING_TBL S, PRODUCT_TBL F, DELIVERY_TBL E
WHERE(Z.CUSTOMER_ID = T.CUSTOMER_ID AND A.EMPLOYEE_ID = T.EMPLOYEE_ID AND S.BILL_ID = T.BILL_ID and S.PRODUCT_ID = F.PRODUCT_ID and E.DELIVERY_ID = S.DELIVERY_ID 
AND BILL_DATE = '15-MAY-17');

--QUESTION5
CREATE VIEW PRODUCT AS
SELECT PRODUCT, PRICE, QTY ,"Stock Value" from(
SELECT PD.PRODUCT, PD.PRICE, PD.QTY , sum(PD.PRICE*PD.QTY) as "Stock Value"
FROM PRODUCT_TBL PD
GROUP by PD.PRODUCT,PD.PRICE,PD.QTY)
WHERE ("Stock Value" > 100000);
SELECT * FROM PRODUCT

--QUESTION 6
SET SERVEROUTPUT ON

DECLARE
CURSOR PRD_PURCH IS
SELECT Q.FIRST_NAME||','|| Q.SURNAME as CUSTOMER, T.PRODUCT
FROM CUSTOMER_TBL Q,BILLING_TBL Y,
PRODUCT_BILLING_TBL R, PRODUCT_TBL T
WHERE(Q.CUSTOMER_ID = Y.CUSTOMER_ID AND R.BILL_ID = Y.BILL_ID 
AND T.PRODUCT_ID = R.PRODUCT_ID AND PRICE > 10000);
BEGIN
FOR ITEM in PRD_PURCH
LOOP
dbms_output.put_line('CUSTOMER:     ' || (ITEM.CUSTOMER));
dbms_output.put_line('PRODUCT:      ' || ITEM.PRODUCT);
dbms_output.put_line('_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _');
END LOOP;
END;

--QUESTION 7
DECLARE
CURSOR PROD_R IS
SELECT S.FIRST_NAME||','|| S.SURNAME AS CUSTOMER, D.PRODUCT, T.REASON
FROM CUSTOMER_TBL S,BILLING_TBL E,
PRODUCT_BILLING_TBL V, PRODUCT_TBL D, RETURNS_TBL T
WHERE(S.CUSTOMER_ID = E.CUSTOMER_ID AND V.BILL_ID = E.BILL_ID 
AND D.PRODUCT_ID = V.PRODUCT_ID AND V.RETURN_ID = T.RETURN_ID);
BEGIN
FOR ITEM IN PROD_R
LOOP
dbms_output.put_line('CUSTOMER:             ' || (ITEM.CUSTOMER));
dbms_output.put_line('PRODUCT:              ' || ITEM.PRODUCT);
dbms_output.put_line('RETURN REASON:        ' || ITEM.REASON);
dbms_output.put_line(' _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ');
END LOOP;
END;

--QUESTION 8

DECLARE
CURSOR DDAY IS
SELECT PR.PRODUCT,PR.PRICE, T.DESCRIPTION, ( 
       TO_DATE(T.DELIVERY_DATE,'dd/mm/yyyy') - 
       TO_DATE(T.DISPATCH_DATE,'dd/mon/yyyy') ) AS DATEDIFF
FROM PRODUCT_BILLING_TBL D, PRODUCT_TBL PR, DELIVERY_TBL T
WHERE(PR.PRODUCT_ID = D.PRODUCT_ID AND D.DELIVERY_ID = T.DELIVERY_ID)
ORDER BY PR.Price ASC;

BEGIN
FOR ITEM IN DDAY
LOOP
IF(ITEM.DATEDIFF>3) THEN
dbms_output.put_line('PRODUCT:           ' || (ITEM.PRODUCT));
dbms_output.put_line('PRICE:            R' || ITEM.PRICE);
dbms_output.put_line('DESCRIPTION:       ' || ITEM.DESCRIPTION);
dbms_output.put_line('DELIVERY DAY:      ' || ITEM.DATEDIFF);
  IF(ITEM.PRICE>=15000) THEN
  dbms_output.put_line('PRODUCT CATEGORY: PREMIUM PRODUCT');
  ELSE
  dbms_output.put_line('PRODUCT CATEGORY: N PREMIUM PRODUCT');
  END IF;
dbms_output.put_line('_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _');
END IF;
END LOOP;
END;

